doctype html
html
  head
    title Reset Password
    style.
      body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        font-family: Arial, sans-serif;
        background-color: #f4f4f9;
      }

      .form-container {
        background: #ffffff;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        width: 100%;
      }

      .form-container h2 {
        text-align: center;
        margin-bottom: 1.5rem;
        color: #333;
      }

      .form-group {
        margin-bottom: 1rem;
      }

      label {
        display: block;
        margin-bottom: 0.5rem;
        color: #666;
      }

      input[type="password"] {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
        transition: border-color 0.3s;
      }

      input[type="password"]:focus {
        border-color: #007bff;
        outline: none;
      }

      button {
        width: 100%;
        padding: 0.75rem;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      button:hover {
        background-color: #0056b3;
      }

      .error {
        color: red;
        margin-top: 0.5rem;
      }

  body
    .form-container
      h2 Reset Password
      form#resetPasswordForm(action="/users/reset-password" method="POST")
        input(type="hidden" name="token" value= token)
        .form-group
          label(for="new-password") New Password
          input#new-password(type="password" name="newPassword" required)
          div#error-new-password.error
        .form-group
          label(for="confirm-password") Confirm Password
          input#confirm-password(type="password" name="confirmPassword" required)
          div#error-confirm-password.error
        .form-group
          button(type="submit") Reset Password

    script.
      document.getElementById('resetPasswordForm').addEventListener('submit', function(event) {
          // Clear previous error messages
          document.getElementById('error-new-password').textContent = '';
          document.getElementById('error-confirm-password').textContent = '';

          // Get the values of the password fields
          const newPassword = document.getElementById('new-password').value;
          const confirmPassword = document.getElementById('confirm-password').value;

          // Regular expressions for password validation
          const minLength = /.{6,}/;
          const hasLowerCase = /(?=.*[a-z])/;
          const hasUpperCase = /(?=.*[A-Z])/;
          const hasSpecialChar = /(?=.*[!@#$%^&*(),.?":{}|<>])/;

          let valid = true;

          // Validate new password
          if (!minLength.test(newPassword)) {
              document.getElementById('error-new-password').textContent = 'Password must be at least 6 characters long';
              valid = false;
          }
          if (!hasLowerCase.test(newPassword)) {
              document.getElementById('error-new-password').textContent += ' Password must contain at least one lowercase letter.';
              valid = false;
          }
          if (!hasUpperCase.test(newPassword)) {
              document.getElementById('error-new-password').textContent += ' Password must contain at least one uppercase letter.';
              valid = false;
          }
          if (!hasSpecialChar.test(newPassword)) {
              document.getElementById('error-new-password').textContent += ' Password must contain at least one special character.';
              valid = false;
          }

          // Validate confirm password
          if (newPassword !== confirmPassword) {
              document.getElementById('error-confirm-password').textContent = 'Passwords do not match.';
              valid = false;
          }

          // Prevent form submission if validation fails
          if (!valid) {
              event.preventDefault();
          }
      });
