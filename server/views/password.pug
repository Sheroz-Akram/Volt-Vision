doctype html
html
  head
    title Reset Password
    // Add Bootstrap CSS
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet")
    // Add Bootstrap Icons
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css")
    style.
      body {
        background-color: #f8f9fa;
        min-height: 100vh;
        display: flex;
        align-items: center;
      }

      .form-container {
        max-width: 450px;
        width: 100%;
        margin: 0 auto;
      }

      .password-container {
        position: relative;
      }

      .toggle-password {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        border: none;
        background: none;
        cursor: pointer;
        color: #6c757d;
      }

      .toggle-password:hover {
        color: #0d6efd;
      }

      .toggle-password:focus {
        outline: none;
        box-shadow: none;
      }

  body
    .container
      .form-container
        .card.shadow-sm
          .card-body.p-4
            h2.card-title.text-center.mb-4 Reset Password
            form#resetPasswordForm(action="/users/reset-password" method="POST")
              input(type="hidden" name="token" value= token)
              .mb-3
                label.form-label(for="new-password") New Password
                .password-container
                  input#new-password.form-control(
                    type="password" 
                    name="newPassword" 
                    required
                    placeholder="Enter new password"
                  )
                  button.toggle-password.btn(type="button" data-target="new-password")
                    i.bi.bi-eye
                div#error-new-password.form-text.text-danger
              .mb-3
                label.form-label(for="confirm-password") Confirm Password
                .password-container
                  input#confirm-password.form-control(
                    type="password" 
                    name="confirmPassword" 
                    required
                    placeholder="Confirm your password"
                  )
                  button.toggle-password.btn(type="button" data-target="confirm-password")
                    i.bi.bi-eye
                div#error-confirm-password.form-text.text-danger
              button.btn.btn-primary.w-100(type="submit") Reset Password

    // Add Bootstrap JS and Popper.js
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js")
    script.
      document.querySelectorAll('.toggle-password').forEach(button => {
        button.addEventListener('click', function() {
          const targetId = this.getAttribute('data-target');
          const passwordInput = document.getElementById(targetId);
          const icon = this.querySelector('i');
          
          if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
          } else {
            passwordInput.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
          }
        });
      });

      document.getElementById('resetPasswordForm').addEventListener('submit', function(event) {
          // Clear previous error messages
          document.getElementById('error-new-password').textContent = '';
          document.getElementById('error-confirm-password').textContent = '';

          const newPassword = document.getElementById('new-password').value;
          const confirmPassword = document.getElementById('confirm-password').value;

          const minLength = /.{6,}/;
          const hasLowerCase = /(?=.*[a-z])/;
          const hasUpperCase = /(?=.*[A-Z])/;
          const hasSpecialChar = /(?=.*[!@#$%^&*(),.?":{}|<>])/;

          let valid = true;
          let errorMessages = [];

          // Validate new password
          if (!minLength.test(newPassword)) {
              errorMessages.push('Password must be at least 6 characters long');
              valid = false;
          }
          if (!hasLowerCase.test(newPassword)) {
              errorMessages.push('one lowercase letter');
              valid = false;
          }
          if (!hasUpperCase.test(newPassword)) {
              errorMessages.push('one uppercase letter');
              valid = false;
          }
          if (!hasSpecialChar.test(newPassword)) {
              errorMessages.push('one special character');
              valid = false;
          }

          if (errorMessages.length > 0) {
              document.getElementById('error-new-password').textContent = 
                'Password must contain: ' + errorMessages.join(', ');
          }

          // Validate confirm password
          if (newPassword !== confirmPassword) {
              document.getElementById('error-confirm-password').textContent = 
                'Passwords do not match.';
              valid = false;
          }

          if (!valid) {
              event.preventDefault();
          }
      });
